{"version":3,"file":"src_pages_login_vue.37c67f97b719705f8bc8.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAC4D;AACnB;AAEY;AAChB;AAG9B,IAAMQ,QAAQ,GAAC,SAATA,QAAQ,GAAC;EAClB,IAAMC,MAAM,GAACF,qDAAS,EAAE;EACxB,IAAMG,gBAAgB,GAACR,wCAAG,CAAe,IAAI,CAAC;EAC9C,IAAMS,QAAQ,GAAGP,2CAAM,CAAa,UAAU,CAAC;EACxC,aAAS,GAAEE,wDAAY,EAAE,UAAhB;EACV,SAA4BD,uDAAW,EAAE;IAAxCO,OAAO;IAACC,UAAU;IAACC,MAAM,YAAe;EAC/C,IAAMC,YAAY,GAACb,wCAAG,CAAS,EAAE,CAAC;EAClC,IAAMc,QAAQ,GAACb,6CAAQ,CAAa;IAChCc,QAAQ,EAAC,WAAW;IACpBC,QAAQ,EAAC,aAAa;IACtBC,UAAU,EAAC;GACd,CAAC;EAEF,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAG;IAAA;;QAChB,IAAGJ,QAAQ,CAACE,QAAQ,CAACG,KAAK,CAACpB,wDAAa,CAAC,IAAIe,QAAQ,CAACC,QAAQ,CAACI,KAAK,CAACrB,wDAAa,CAAC,EAAC;UAChFU,gBAAgB,CAACY,KAAK,GAAC,IAAI;UAC3BP,YAAY,CAACO,KAAK,GAAC,EAAE;UACrBC,KAAK,CAACX,OAAO,GAAC,iBAAiB,EAAC;YAC5BY,MAAM,EAAC,MAAM;YAEbC,IAAI,EAACT,QAAQ;YAEbU,OAAO,EAAC;cACJC,aAAa,EAACb;;WAErB,CAAC,CAACc,IAAI,CAAC,eAAK;YACT,IAAGZ,QAAQ,CAACG,UAAU,EAAC;cACnBR,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEkB,GAAG,CAAChB,UAAoB,EAACiB,KAAK,CAAC;;YAE7CC,SAAS,CAACC,MAAM,CAAC;cACbf,QAAQ,EAACD,QAAQ,CAACC,QAAQ;cAC1BgB,OAAO,EAAC,IAAI;cACZH,KAAK,EAACA;aACT,CAAC;YACFrB,MAAM,CAACyB,IAAI,CAAC;cAACC,IAAI,EAAC;YAAW,CAAC,CAAC;UACnC,CAAC,CAAC,CAACC,KAAK,CAAC,aAAG;YACRL,SAAS,CAACM,MAAM,EAAE;YAClBtB,YAAY,CAACO,KAAK,GAAC,kDAAkD;YACrEgB,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;UACpB,CAAC,CAAC,CAACC,OAAO,CAAC;YACP/B,gBAAgB,CAACY,KAAK,GAAC,KAAK;UAChC,CAAC,CAAC;;;;;GAET;EAGD,OAAM;IACFN,QAAQ;IAACI,WAAW;IAACpB,aAAa;IAACC,aAAa;IAACS,gBAAgB;IAACK,YAAY;GACjF;AACL,CAAC","sources":["webpack://template/./src/composables/useLogin.ts"],"sourcesContent":["import {IUser_Data} from \"../utils/Types\";\r\nimport {usernameRegex,passwordRegex} from \"../utils/Helper\";\r\nimport {ref, reactive,inject} from \"vue\";\r\nimport {VueCookies} from \"vue-cookies\";\r\nimport {envVariable,useAuthStore} from \"./useStates\";\r\nimport {useRouter} from \"vue-router\";\r\nimport axios from \"axios\";\r\n\r\nexport const useLogin=()=>{\r\n    const router=useRouter()\r\n    const loginRequestFlag=ref<boolean|null>(null)\r\n    const $cookies = inject<VueCookies>('$cookies');\r\n    const {authStore}=useAuthStore();\r\n    const {apiBase,cookieName,apiKey}=envVariable();\r\n    const errorMessage=ref<string>('')\r\n    const userData=reactive<IUser_Data>({\r\n        username:'hooman_77',\r\n        password:'13777731Ho@',\r\n        rememberMe:false\r\n    })\r\n\r\n    const formHandler = async () => {\r\n        if(userData.password.match(passwordRegex) && userData.username.match(usernameRegex)){\r\n            loginRequestFlag.value=true\r\n            errorMessage.value=''\r\n            fetch(apiBase+'/api/auth/login',{\r\n                method:'POST',\r\n                // @ts-ignore\r\n                body:userData,\r\n                // @ts-ignore\r\n                headers:{\r\n                    Authorization:apiKey\r\n                },\r\n            }).then(token=>{\r\n                if(userData.rememberMe){\r\n                    $cookies?.set(cookieName as string,token)\r\n                }\r\n                authStore.$patch({\r\n                    username:userData.username,\r\n                    isLogin:true,\r\n                    token:token\r\n                })\r\n                router.push({name:'DASHBOARD'})\r\n            }).catch(err=>{\r\n                authStore.$reset()\r\n                errorMessage.value='Error in connecting to server! please try again.'\r\n                console.log(err)\r\n            }).finally(()=>{\r\n                loginRequestFlag.value=false\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return{\r\n        userData,formHandler,usernameRegex,passwordRegex,loginRequestFlag,errorMessage\r\n    }\r\n}"],"names":["usernameRegex","passwordRegex","ref","reactive","inject","envVariable","useAuthStore","useRouter","useLogin","router","loginRequestFlag","$cookies","apiBase","cookieName","apiKey","errorMessage","userData","username","password","rememberMe","formHandler","match","value","fetch","method","body","headers","Authorization","then","set","token","authStore","$patch","isLogin","push","name","catch","$reset","console","log","err","finally"],"sourceRoot":""}